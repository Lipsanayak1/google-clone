{"version":3,"sources":["StateProvider.js","reducer.js","components/SearchBar.js","pages/Home.js","UseGoogleSearch.js","pages/SearchPage.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","actionTypes","state","action","console","log","type","term","SearchBar","hideButtons","termm","dispatch","useState","input","setInput","history","useHistory","search","e","preventDefault","push","className","placeholder","onChange","target","Button","variant","onClick","Home","to","Avatar","alt","src","title","useGoogleSearch","data","setData","useEffect","a","fetch","then","response","json","result","fetchData","SearchPage","UseGoogleSearch","searchInformation","formattedTotalResults","formattedSearchTime","items","map","item","href","link","pagemap","cse_image","length","displayLink","snippet","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.872a2c52.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n","export const initialState = {\n  term: null,\n};\nexport const actionTypes = { SET_SEARCH_TERM: \"SET_SEARCH_TERM\" };\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case actionTypes.SET_SEARCH_TERM:\n      return { ...state, term: action.term };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { useState } from \"react\";\nimport \"./SearchBar.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport { Button } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { useStateValue } from \"../StateProvider\";\nimport { actionTypes } from \"../reducer\";\n\nconst SearchBar = ({ hideButtons = false, termm }) => {\n  const [{}, dispatch] = useStateValue();\n  const [input, setInput] = useState(\"\");\n  const history = useHistory();\n  const search = (e) => {\n    e.preventDefault();\n    history.push(\"/search\");\n    dispatch({\n      type: actionTypes.SET_SEARCH_TERM,\n      term: input,\n    });\n  };\n  return (\n    <form className=\"search\">\n      <div className=\"search__input\">\n        <SearchIcon className=\"search__inputIcon\"></SearchIcon>\n        {!hideButtons ? (\n          <input\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n          ></input>\n        ) : (\n          <input\n            value={input}\n            placeholder={termm}\n            onChange={(e) => setInput(e.target.value)}\n          ></input>\n        )}\n        <MicIcon />\n      </div>\n      {!hideButtons ? (\n        <div className=\"search__buttons\">\n          <Button type=\"submit\" variant=\"outlined\" onClick={search}>\n            Google Search\n          </Button>\n          <Button variant=\"outlined\">I'm Feeling Lucky</Button>\n        </div>\n      ) : (\n        <div className=\"search__buttons\">\n          <Button\n            className=\"search__buttonsHidden\"\n            type=\"submit\"\n            variant=\"outlined\"\n            onClick={search}\n          >\n            Google Search\n          </Button>\n          <Button className=\"search__buttonsHidden\" variant=\"outlined\">\n            I'm Feeling Lucky\n          </Button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport \"./Home.css\";\nimport { Link } from \"react-router-dom\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport { Avatar } from \"@material-ui/core\";\nimport SearchBar from \"../components/SearchBar\";\n\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <div className=\"home__header\">\n        <div className=\"home__headerLeft\">\n          <Link to=\"/about\">About</Link>\n          <Link to=\"/store\">Store</Link>\n        </div>\n        <div className=\"home__headerRight\">\n          <Link to=\"/gmail\">Gmail</Link>\n          <Link to=\"/image\">Images</Link>\n          <AppsIcon />\n          <Avatar />\n        </div>\n      </div>\n      <div className=\"home__body\">\n        <img\n          alt=\"To all the coronavirus helpers, thank you\"\n          src=\"https://www.google.com/logos/doodles/2020/thank-you-coronavirus-helpers-april-25-26-copy-6753651837108821-law.gif\"\n          title=\"To all the coronavirus helpers, thank you\"\n        />\n        <div className=\"home__inputContainer\">\n          <SearchBar />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","// import { useState, useEffect } from \"react\";\n// import API_KEY from \"./keys\";\n\n// const CONTEXT_KEY = \"df610d6a036ac4d2a\";\n// //creating custom hook\n// const UseGoogleSearch = (term) => {\n//   const [data, setData] = useState(null);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       fetch(\n//         `https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`\n//       )\n//         .then((response) => response.json())\n//         .then((result) => {\n//           setData(result);\n//         });\n//     };\n//     fetchData();\n//   }, [term]);\n//   return { data };\n// };\n\n// export default UseGoogleSearch;\nimport { useState, useEffect } from \"react\";\n\nconst CONTEXT_KEY = \"3b7d248ed38f2a460\";\n\nconst useGoogleSearch = (term) => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      fetch(\n        `https://www.googleapis.com/customsearch/v1?key=AIzaSyAsxbk97IUSpBNQ6K5KhCxgq187amii0X0&cx=${CONTEXT_KEY}&q=${term}`\n      )\n        .then((response) => response.json())\n        .then((result) => {\n          setData(result);\n        });\n    };\n    fetchData();\n  }, [term]);\n  return { data };\n};\n\nexport default useGoogleSearch;\n","import React from \"react\";\nimport SearchBar from \"../components/SearchBar\";\nimport \"./SearchPage.css\";\nimport { useStateValue } from \"../StateProvider\";\nimport UseGoogleSearch from \"../UseGoogleSearch\";\nimport Response from \"../response\";\nimport { Link } from \"react-router-dom\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\n\nfunction SearchPage() {\n  const [{ term }, dispatch] = useStateValue();\n  //LIVE API CALL\n  const { data } = UseGoogleSearch(term);\n\n  // const data = Response;\n  return (\n    <div className=\"SearchPage\">\n      <div className=\"searchPage__header\">\n        <Link to=\"/\">\n          <img\n            className=\"searchPage__Logo\"\n            alt=\"To all the coronavirus helpers, thank you\"\n            src=\"https://www.google.com/logos/doodles/2020/thank-you-coronavirus-helpers-april-25-26-copy-6753651837108821-s.png\"\n            title=\"To all the coronavirus helpers, thank you\"\n          />\n        </Link>\n        <div className=\"searchPage__headerBody\">\n          <SearchBar hideButtons={true} termm={term} />\n          <div className=\"searchPage__options\">\n            <div className=\"searchPage__optionsLeft\">\n              <div className=\"searchPage__option\">\n                <SearchIcon />\n                <Link to=\"/all\"> All </Link>\n              </div>\n              <div className=\"searchPage__option\">\n                <DescriptionIcon />\n                <Link to=\"/news\"> News </Link>\n              </div>\n              <div className=\"searchPage__option\">\n                <ImageIcon />\n                <Link to=\"/images\"> Images </Link>\n              </div>\n              <div className=\"searchPage__option\">\n                <LocalOfferIcon />\n                <Link to=\"/shopping\"> Shopping </Link>\n              </div>\n              <div className=\"searchPage__option\">\n                <RoomIcon />\n                <Link to=\"/maps\"> Maps </Link>\n              </div>\n              <div className=\"searchPage__option\">\n                <MoreVertIcon />\n                <Link to=\"/more\"> More </Link>\n              </div>\n            </div>\n            <div className=\"searchPage__optionsRight\">\n              <div className=\"searchPage__option\">\n                <Link to=\"/settings\"> Settings </Link>\n              </div>\n              <div className=\"searchPage__option\">\n                <Link to=\"/tools\"> Tools </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {term && (\n        <div className=\"searchPage__results\">\n          <p className=\"searchPage__resultCount\">\n            About {data?.searchInformation.formattedTotalResults} results{\" \"}\n            {data?.searchInformation.formattedSearchTime} seconds for {term}\n            {data?.items.map((item) => (\n              <div className=\"searchPage__result\">\n                <a href={item.link}>\n                  {item.pagemap?.cse_image?.length > 0 &&\n                    item.pagemap?.cse_image[0]?.src && (\n                      <img\n                        className=\"searchPage__resultImage\"\n                        src={\n                          item.pagemap?.cse_image?.length > 0 &&\n                          item.pagemap?.cse_image[0]?.src\n                        }\n                        alt=\"\"\n                      />\n                    )}\n                  {item.displayLink}\n                </a>\n                <a className=\"searchPage__resultTitle\" href={item.link}>\n                  <h2> {item.title}</h2>\n                </a>\n                <p className=\"searchPage__resultSnippet\">{item.snippet}</p>\n              </div>\n            ))}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default SearchPage;\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./pages/Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SearchPage from \"./pages/SearchPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/search\">\n            <SearchPage />\n          </Route>\n          <Route path=\"/\">\n            {/* Home(the one with the search on) */}\n            <Home />\n\n            {/* Search Page (The result page) */}\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport reducer, { initialState } from \"./reducer\";\nimport { StateProvider } from \"./StateProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}